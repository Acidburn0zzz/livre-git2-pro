=== Configuration et paramétrage d'un compte

(((GitHub, user accounts)))
La première chose que vous devez faire est de créer gratuitement un compte utilisateur.
Allez tout simplement sur https://github.com[], choisissez un nom d'utilisateur qui n'est pas déjà pris et saisissez
une adresse électronique et un mot de passe, puis cliquez sur le gros bouton vert « Sign up for GitHub » (S'inscrire sur GitHub).

.Le formulaire d'inscription de GitHub.
image::images/signup.png[Le formulaire d'inscription de GitHub.]

La deuxième chose que vous verrez est la page des tarifs pour des projets améliorés mais il vaut mieux ignorer
cela pour l'instant. GitHub vous envoie un courriel pour vérifier l'adresse fournie. Poursuivez et faites-le, c'est
très important (comme nous allons le voir plus tard).

[NOTE]
====
Vous avez accès à toutes les fonctionnalités de GitHub avec un compte gratuit, à la condition que tous vos projets soient
entièrement publics (tout le monde peut y accéder en lecture).
Les projets payant de GitHub comprennent un nombre défini de projets privés mais nous ne parlerons pas de cela
dans ce livre.
====

En cliquant sur le logo Octocat (logo en forme de chat) dans le coin supérieur gauche de l'écran, vous accéderez
à votre tableau de bord. Vous êtes maintenant prêt à utiliser GitHub.

==== Accès par SSH 

(((SSH keys, with GitHub)))
Pour l'instant, vous êtes parfaitement capable de vous connecter aux dépôts Git en utilisant le protocole `https://`
et en s'identifiant avec le nom d'utilisateur et le mot de passe que vous venez de configurer.
Cependant, pour simplement cloner des projets publics, il n'est pas nécessaire de s'authentifier - le compte récemment
créé entre en jeu lorsque vous faites un « fork » (bifurcation) de projets ou lorsque vous poussez vers vos « forks » plus tard.

Si vous désirez utiliser des accès SSH, vous devez configurer une clé publique 
(si vous n'en avez pas déjà une, consultez <<_generate_ssh_key>>).
Accédez aux paramètres de votre compte en utilisant le lien en haut à droite de la fenêtre :

.Lien vers « Account settings » (paramètres du compte).
image::images/account-settings.png[Lien vers « Account settings » (paramètres du compte).]

Puis sélectionnez la section ``SSH keys'' (clés SSH) dans le menu de gauche.

.Lien vers « SSH keys » (clés SSH).
image::images/ssh-keys.png[Lien vers « SSH keys » (clés SSH).]

Ensuite, cliquez sur le bouton « `Add SSH key` » (ajouter une clé SSH), donner un nom à votre clé, coller le contenu de votre fichier public de clé `~/.ssh/id_rsa.pub` (ou autre si vous lui avez donné un autre nom) dans la zone de texte et cliquez sur « Add key » (ajouter la clé).

[NOTE]
====
Assurez-vous de choisir un nom facile à retenir pour votre clé SSH. Vous pouvez donner un nom à chacune de vos clés
(par ex. : « Mon portable » ou « Compte travail ») afin que vous puissiez facilement retrouver la bonne si devez révoquer une clé plus tard.
====

[[_personal_avatar]]
==== Votre avatar

Si vous le voulez, vous pouvez remplacer l'avatar qui est généré pour vous par une image de votre choix. Sélectionnez la section «Profile » (profil) (au dessus de la section « SSH Keys ») et cliquez sur « Upload new picture » (télécharger une nouvelle image).

.Lien vers « Profile » (profil).
image::images/your-profile.png[Lien vers « Profile » (profil).]

Après avoir sélectionné une image sur votre disque dur, il vous est possible de la recadrer.

.Recadrage de l'avatar
image::images/avatar-crop.png[Recadrage de l'avatar.]

Maintenant, partout où vous interagissez sur le site, les gens verrons votre avatar à côté de votre nom d'utilisateur.

S'il se trouve que vous avez déposé un avatar sur le service populaire Gravatar (souvent utilisé pour les comptes
Wordpress), cet avatar sera utilisé par défaut et vous n'avez pas à exécuter cette étape.

==== Votre adresse électronique

The way that GitHub maps your Git commits to your user is by email address. If you use multiple email addresses in your commits and you want GitHub to link them up properly, you need to add all the email addresses you have used to the Emails section of the admin section.

[[_add_email_addresses]]
.Add email addresses
image::images/email-settings.png[Add all your email addresses.]

In <<_add_email_addresses>> we can see some of the different states that are possible. The top address is verified and set as the primary address, meaning that is where you'll get any notifications and receipts. The second address is verified and so can be set as the primary if you wish to switch them. The final address is unverified, meaning that you can't make it your primary address. If GitHub sees any of these in commit messages in any repository on the site, it will be linked to your user now.

==== Two Factor Authentication

Finally, for extra security, you should definitely set up Two-factor Authentication or ``2FA''. Two-factor Authentication is an authentication mechanism that is becoming more and more popular recently to mitigate the risk of your account being compromised if your password is stolen somehow. Turning it on will make GitHub ask you for two different methods of authentication, so that if one of them is compromised, an attacker will not be able to access your account.

You can find the Two-factor Authentication setup under the Security tab of your Account settings.

.2FA in the Security Tab
image::images/2fa-1.png[2FA in the Security Tab]

If you click on the ``Set up two-factor authentication'' button, it will take you to a configuration page where you can choose to use a phone app to generate your secondary code (a ``time based one-time password''), or you can have GitHub send you a code via SMS each time you need to log in.

After you choose which method you prefer and follow the instructions for setting up 2FA, your account will then be a little more secure and you will have to provide a code in addition to your password whenever you log into GitHub.
