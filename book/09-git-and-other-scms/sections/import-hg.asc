==== Mercurial

(((Mercurial)))(((Importation, depuis Mercurial)))
Puisque Mercurial et Git ont des modèles assez similaires pour représenter les versions, et puisque Git est un peu plus flexible, convertir un dépôt depuis Mercurial vers Git est assez simple, en utilisant un outil appelé "hg-fast-export", duquel vous aurez besoin d'une copie :

[source,console]
----
$ git clone http://repo.or.cz/r/fast-export.git /tmp/fast-export
----

La première étape dans la conversion est d'obtenir un clone complet du dépôt Mercurial que vous voulez convertir :

[source,console]
----
$ hg clone <remote repo URL> /tmp/hg-repo
----

L'étape suivante est de créer un fichier d'association d'auteur.
Mercurial est un peu plus indulgent que Git pour ce qu'il mettra dans le champ auteur pour les changements, donc c'est le bon moment pour faire le ménage.
La génération de ceci est une ligne de commande dans un shell `bash` :

[source,console]
----
$ cd /tmp/hg-repo
$ hg log | grep user: | sort | uniq | sed 's/user: *//' > ../authors
----

Cela prendra quelques secondes, en fonction de la longueur de l'historique de votre projet, et ensuite le fichier `/tmp/authors` ressemblera à quelque chose comme ceci :

[source]
----
bob
bob@localhost
bob <bob@company.com>
bob jones <bob <AT> company <DOT> com>
Bob Jones <bob@company.com>
Joe Smith <joe@company.com>
----

Dans cet exemple, la même personne (Bob) a créé des changements sous différents noms, dont l'un d'eux a vraiment l'air correct, et dont l'un d'eux serait complètement invalide pour un commit Git.
Hg-fast-import nous laisse régler cela en ajoutant `={nouveau nom et adresse de courriel}` à la fin de chaque ligne que l'on veut changer, et en enlevant les lignes pour les noms d'utilisateur auxquels on ne veut pas toucher.
Si tous les noms d'utilisateur ont l'air bien, nous n'aurons pas du tout besoin de ce fichier.
Dans cet exemple, nous voulons que notre fichier ressemble à cela :

[source]
----
bob=Bob Jones <bob@company.com>
bob@localhost=Bob Jones <bob@company.com>
bob jones <bob <AT> company <DOT> com>=Bob Jones <bob@company.com>
bob <bob@company.com>=Bob Jones <bob@company.com>
----

L'étape suivante est de créer notre nouveau dépôt Git, et lancer le script d'export :

[source,console]
----
$ git init /tmp/converted
$ cd /tmp/converted
$ /tmp/fast-export/hg-fast-export.sh -r /tmp/hg-repo -A /tmp/authors
----

Le drapeau `-r` indique à hg-fast-export où trouver le dépôt Mercurial que l'on veut convertir, et le drapeau `-A` lui indique où trouver le fichier de correspondance d'auteur.
Le script analyse les changements Mercurial et les convertit dans un script pour la fonctionnalité "import-rapide" de Git (que nous détaillerons un peu plus tard).
Cela prend un peu de temps (bien que ce soit _beaucoup plus_ rapide que si c'était à travers le réseau), et la sortie est assez verbeuse :

[source,console]
----
$ /tmp/fast-export/hg-fast-export.sh -r /tmp/hg-repo -A /tmp/authors
Loaded 4 authors
master: Exporting full revision 1/22208 with 13/0/0 added/changed/removed files
master: Exporting simple delta revision 2/22208 with 1/1/0 added/changed/removed files
master: Exporting simple delta revision 3/22208 with 0/1/0 added/changed/removed files
[…]
master: Exporting simple delta revision 22206/22208 with 0/4/0 added/changed/removed files
master: Exporting simple delta revision 22207/22208 with 0/2/0 added/changed/removed files
master: Exporting thorough delta revision 22208/22208 with 3/213/0 added/changed/removed files
Exporting tag [0.4c] at [hg r9] [git :10]
Exporting tag [0.4d] at [hg r16] [git :17]
[…]
Exporting tag [3.1-rc] at [hg r21926] [git :21927]
Exporting tag [3.1] at [hg r21973] [git :21974]
Issued 22315 commands
git-fast-import statistics:
---------------------------------------------------------------------
Alloc'd objects:     120000
Total objects:       115032 (    208171 duplicates                  )
      blobs  :        40504 (    205320 duplicates      26117 deltas of      39602 attempts)
      trees  :        52320 (      2851 duplicates      47467 deltas of      47599 attempts)
      commits:        22208 (         0 duplicates          0 deltas of          0 attempts)
      tags   :            0 (         0 duplicates          0 deltas of          0 attempts)
Total branches:         109 (         2 loads     )
      marks:        1048576 (     22208 unique    )
      atoms:           1952
Memory total:          7860 KiB
       pools:          2235 KiB
     objects:          5625 KiB
---------------------------------------------------------------------
pack_report: getpagesize()            =       4096
pack_report: core.packedGitWindowSize = 1073741824
pack_report: core.packedGitLimit      = 8589934592
pack_report: pack_used_ctr            =      90430
pack_report: pack_mmap_calls          =      46771
pack_report: pack_open_windows        =          1 /          1
pack_report: pack_mapped              =  340852700 /  340852700
---------------------------------------------------------------------

$ git shortlog -sn
   369  Bob Jones
   365  Joe Smith
----

C'est à peu près tout ce qu'il y a.
Toutes les étiquettes Mercurial ont été converties en étiquettes Git, et les branches et marques-page Mercurial ont été convertis en branches Git.
Maintenant vous êtes prêt à pousser le dépôt vers son nouveau foyer côté serveur :

[source,console]
----
$ git remote add origin git@my-git-server:myrepository.git
$ git push origin --all
----
